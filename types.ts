/* eslint-disable no-unused-vars */
export interface IService {
  flatten_name: string;
  real_name: string;
  price: number;
  duration: number;
  description: string;
  isCustomService: boolean;
}
export interface Payment {
  amount: number;
  date: number;
  result: string;
}
export type PortfolioImage = {
  src: string;
  text: string;
};
export type PremiumConfig = {
  targetClients: number | null;
  autoBooking: boolean | null;
  highlighted: boolean | null;
  adBudgetPLN?: number;
  monthlyPricePLN: number;
  averageServicePricePLN?: number;
  estimatedMonthlyGainPLN?: number;
  lastUpdatedAt: number;
};
export type User = {
  uid: string;
  name: string;
  email: string;
  description: string;
  logo: string;
  bannerUrl?: string;
  dailyClients?: number;

  seek: boolean;
  emailVerified: boolean;
  configured: boolean;
  active: boolean;
  premiumActive?: boolean;
  profileComments: string[];
  password: string;

  portfolioImages: PortfolioImage[];
  payments: Payment[];
  services: IService[];
  location: { lng: number; lat: number; address: string };
  phoneNumber: string;
  userSlugUrl?: string;
  premiumConfig?: PremiumConfig;
  subscriptionId?: string;
  customerId?: string;
  subscription?: {
    id: string;
    status: string;
    currentPeriodEnd?: number;
    cancelAtPeriodEnd?: boolean;
  };
  metadata?: {
    seoTitle?: string;
    seoDescription?: string;
    seoKeywords?: string;
  };
  settings?: {
    emailNotifications?: boolean;
    autoReminders?: boolean;
    darkMode?: boolean;
    twoFactorEnabled?: boolean;
    publicProfile?: boolean;
    fontFamily?: string;
  };
};

export interface ICity {
  id: string;
  name: string;
}

export type Post = {
  postId: string;
  title: string;
  sections: Section[];
  intro: string;
  outro: string;
  tags: string[];
  url: string;
  slug?: string;
  metaTitle?: string;
  metaDescription?: string;
  metaKeywords?: string[];
  mainImage: string;
  images?: string[];
  faq: {
    question: string;
    answer: string;
  }[];
  blogType: string;
  creationTime: number;
  viewerCount?: number;
  readTime?: number;
  citySlug?: string; // For city-based posts
  isAutogenerated?: boolean; // To distinguish auto-generated posts
};

export type Section = {
  title: string;
  content: string;
  id?: number;
};

export type ImageType = {
  src: string;
  alt: string;
};

// Additional types for blog admin components
export type BlogType = "art" | "tattoo" | "design" | "inspiration";

export type FaqItem = {
  question: string;
  answer: string;
};

export type TagInputProps = {
  tagInput: string;
  setTagInput: (value: string) => void;
  addTag: () => void;
  removeTag: (index: number) => void;
  input: Post;
};

export type FaqHandlerProps = {
  input: Post;
  setInput: (post: Post) => void;
};

export type PostImagesProps = {
  input: Post;
  setInput: (post: Post) => void;
};

export type SectionContentEditorProps = {
  addSection: (title: string, content: string) => void;
};

export type SectionsListProps = {
  input: Post;
  setSelectedSection: (section: Section) => void;
  setSectionEditorOpen: (open: boolean) => void;
  removeSection: (index: number) => void;
};

export type EditSectionProps = {
  selectedSection: Section;
  setSelectedSection: (section: Section) => void;
  selectedPost: Post;
  setSelectedPost: (post: Post) => void;
  setSectionEditorOpen: (open: boolean) => void;
  sectionEditorOpen: boolean;
};
